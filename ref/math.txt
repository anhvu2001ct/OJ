Some fomula:
    a^0+a^1+...+a^n = (a^(n+1)-1)/(a-1)
    n/1+n/2+n/3+...+n/n <= nlogn

Euler's theorem:
    a * a^(phi(n) - 1) ≡ 1 (mod n)
    a, n: co_prime
    phi(n): totient function

Euler's totient function:
    phi(n) = n * MUL(p: prime divisor of n, 1 - 1/p)

Extended euclidean algorithm:
    a*x + n*y = gcd(a, n)
    if a and n are co_prime then:
        a*x + n*y = 1
        a*x ≡ 1 (mod n)

Legendre's fomula:
    v(p, n) = largest x so that p^x divide n
    v(p, n) = SUM(i: 1 -> ∞, n/p^i)
    p: prime
    n: positive integer

Miller-Rabin primality test:
    Given n;
    Find s, d: 2^s*d = n-1
    function check(a):
        Calc x = a^d;
        If (x == 1 || x == n-1): return true
        Repeat s times:
            x = x*x % n;
            If (x == n-1): return true
            Else if (x == 1): return false
        return false
    Repeat k times:
        Choose a in range [2, n-1]
        If check(a) == false: return false
    return true

Tonelli–Shanks:
    